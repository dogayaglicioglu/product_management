version: '3.8'
services:
  web:
    build:
      context: ./web
    depends_on:
      - dbweb
      - auth
    env_file:
      - ./web/.env
    ports:
      - "8081:8081"
    volumes:
      - ./web:/usr/src/app
    command: ["air", "-c", ".air.toml"]

  dbweb:
    image: postgres:alpine
    env_file:
      - ./web/.env
    ports:
      - "5433:5432"
    volumes:
      - postgres-db-web:/var/lib/postgresql/data

  dbauth:
    image: postgres:alpine
    env_file:
      - ./authService/.env
    ports:
      - "5432:5432"
    volumes:
      - postgres-db-auth:/var/lib/postgresql/data
    depends_on:
      - dbweb  

  auth:
    build:
      context: ./authService
    depends_on:
      - dbauth  
    env_file:
      - ./authService/.env
    ports:
      - "8082:8082"
    volumes:
      - ./authService:/usr/src/app
    command: ["air", "-c", ".air.toml"]

  gateway:
    image: nginx:latest
    volumes:
      - ./gateway/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "80:80"
    depends_on:
      - web
  
  zookeeper:
    restart: always
    container_name: kafka-like-zookeeper
    image: docker.io/bitnami/zookeeper:3.8
    ports:
      - "2181:2181"
    volumes:
      - "zookeeper-volume:/bitnami"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes  

  kafka:
    restart: always
    container_name: kafka-like
    image: docker.io/bitnami/kafka:3.3
    ports:
      - "9093:9093"
    volumes:
      - "kafka-volume:/bitnami"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181  
      - ALLOW_PLAINTEXT_LISTENER=yes  
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://localhost:9093
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
    depends_on:
      - zookeeper  

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.13.3
    environment:
      - discovery.type=single-node
    ports:
      - "9200:9200"
    volumes:
      - esdata:/usr/share/elasticsearch/data

  fluentd:
    build: ./fluentd
    volumes:
      - ./fluentd:/fluentd/etc  
    ports:
      - "24224:24224"
      - "24224:24224/udp"
      - "8888:8888"  
    depends_on:
      - elasticsearch
      - kibana

  kibana:
    image: docker.elastic.co/kibana/kibana:7.13.3
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    depends_on:
      - prometheus

volumes:
  zookeeper-volume:
  postgres-db-web:
  postgres-db-auth:
  kafka-volume:
  esdata:
  grafana-storage:
