version: '3.8'
services:
  web:
    build:
      context: ./web
    depends_on:
      - kafka
      - dbweb
      - auth
    env_file:
      - ./web/.env
    ports:
      - "8081:8081"
    volumes:
      - ./web:/usr/src/app
    command: ["air", "-c", ".air.toml"]

  dbweb:
    image: postgres:alpine
    env_file:
      - ./web/.env
    ports:
      - "5433:5432"
    volumes:
      - postgres-db-web:/var/lib/postgresql/data

  dbauth:
    image: postgres:alpine
    env_file:
      - ./authService/.env
    ports:
      - "5432:5432"
    volumes:
      - postgres-db-auth:/var/lib/postgresql/data
    depends_on:
      - dbweb

  auth:
    build:
      context: ./authService
    depends_on:
      - dbauth
    env_file:
      - ./authService/.env
    ports:
      - "8082:8082"
    volumes:
      - ./authService:/usr/src/app
      - ./authService/logger:/logger
    command: ["air", "-c", ".air.toml"]

  gateway:
    image: nginx:latest
    volumes:
      - ./gateway/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "80:80"
    depends_on:
      - web

  zookeeper:
    restart: always
    container_name: kafka-like-zookeeper
    image: docker.io/bitnami/zookeeper:3.8
    ports:
      - "2181:2181"
    volumes:
      - "zookeeper-volume:/bitnami"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes  

  kafka:
    restart: always
    container_name: kafka-like
    image: docker.io/bitnami/kafka:3.3
    ports:
      - "9093:9093"
    volumes:
      - "kafka-volume:/bitnami"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181  
      - ALLOW_PLAINTEXT_LISTENER=yes  
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://localhost:9093
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
    depends_on:
      - zookeeper

  fluent-bit:
    image: fluent/fluent-bit:2.2
    container_name: fluent-bit
    volumes:
      - ./fluent-bit/fluent-bit.conf:/fluent-bit/etc/fluent-bit.conf
      - ./fluent-bit/parsers.conf:/fluent-bit/etc/parsers.conf
      - ./authService/logger:/logger
    depends_on:
      - auth
    ports:
      - "2020:2020"
      - "2021:2021"
    command: ["fluent-bit", "-c", "/fluent-bit/etc/fluent-bit.conf"]

  elasticsearch:
    image: elasticsearch:7.17.13
    container_name: elasticsearch-1
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    volumes:
      - es_data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"

  kibana:
    image: kibana:7.17.13
    container_name: kibana-1
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch

  cache:
    image: redis:7.4.0-alpine
    restart: always
    ports:
      - '6379:6379'
    environment:
      REDIS_PASSWORD: eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
    volumes: 
      - cache:/data

volumes:
  zookeeper-volume:
  postgres-db-web:
  postgres-db-auth:
  kafka-volume:
  es_data:
    driver: local
  cache:
    driver: local